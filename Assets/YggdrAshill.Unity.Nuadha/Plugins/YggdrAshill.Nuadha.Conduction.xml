<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YggdrAshill.Nuadha.Conduction</name>
    </assembly>
    <members>
        <member name="T:YggdrAshill.Nuadha.Conduction.IEmission">
            <summary>
            Token to <see cref="M:YggdrAshill.Nuadha.Conduction.IEmission.Emit"/>.
            </summary>
        </member>
        <member name="M:YggdrAshill.Nuadha.Conduction.IEmission.Emit">
            <summary>
            Emits.
            </summary>
        </member>
        <member name="T:YggdrAshill.Nuadha.Conduction.IGeneration`1">
            <summary>
            Generates <typeparamref name="TSignal"/>.
            </summary>
            <typeparam name="TSignal">
            Type of <see cref="T:YggdrAshill.Nuadha.Signalization.ISignal"/> to generate.
            </typeparam>
        </member>
        <member name="M:YggdrAshill.Nuadha.Conduction.IGeneration`1.Generate">
            <summary>
            Generates <typeparamref name="TSignal"/>.
            </summary>
            <returns>
            <typeparamref name="TSignal"/> generated.
            </returns>
        </member>
        <member name="T:YggdrAshill.Nuadha.Conduction.IIgnition`1">
            <summary>
            Connects <typeparamref name="TModule"/> to emit.
            </summary>
            <typeparam name="TModule">
            Type of <see cref="T:YggdrAshill.Nuadha.Unitization.IModule"/> to connect.
            </typeparam>
        </member>
        <member name="T:YggdrAshill.Nuadha.Conduction.ITransmission`1">
            <summary>
            Generates <typeparamref name="TSignal"/> in order to send to each of <see cref="T:YggdrAshill.Nuadha.Signalization.IConsumption`1"/>.
            </summary>
            <typeparam name="TSignal">
            Type of <see cref="T:YggdrAshill.Nuadha.Signalization.ISignal"/> to transmit.
            </typeparam>
            <remarks>
            Should be generated by <see cref="T:YggdrAshill.Nuadha.Signalization.IPropagation`1"/> combined with <see cref="T:YggdrAshill.Nuadha.Conduction.IGeneration`1"/>.
            In detail, please see <see cref="M:YggdrAshill.Nuadha.Conduction.PropagationExtension.Transmit``1(YggdrAshill.Nuadha.Signalization.IPropagation{``0},YggdrAshill.Nuadha.Conduction.IGeneration{``0})"/>.
            </remarks>
        </member>
        <member name="T:YggdrAshill.Nuadha.Conduction.PropagationExtension">
            <summary>
            Defines extensions for <see cref="T:YggdrAshill.Nuadha.Signalization.IPropagation`1"/>.
            </summary>
        </member>
        <member name="M:YggdrAshill.Nuadha.Conduction.PropagationExtension.Transmit``1(YggdrAshill.Nuadha.Signalization.IPropagation{``0},YggdrAshill.Nuadha.Conduction.IGeneration{``0})">
            <summary>
            Creates <see cref="T:YggdrAshill.Nuadha.Conduction.ITransmission`1"/>.
            </summary>
            <typeparam name="TSignal">
            Type of <see cref="T:YggdrAshill.Nuadha.Signalization.ISignal"/> to transmit.
            </typeparam>
            <param name="propagation">
            <see cref="T:YggdrAshill.Nuadha.Signalization.IPropagation`1"/> to propagate <typeparamref name="TSignal"/>.
            </param>
            <param name="generation">
            <see cref="T:YggdrAshill.Nuadha.Conduction.IGeneration`1"/> to generate <typeparamref name="TSignal"/>.
            </param>
            <returns>
            <see cref="T:YggdrAshill.Nuadha.Conduction.ITransmission`1"/> to transmit.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="propagation"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="generation"/> is null.
            </exception>
        </member>
    </members>
</doc>
